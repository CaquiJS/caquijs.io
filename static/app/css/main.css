/* ==========================================================================
   Import styles
   ========================================================================== */
.clearfix:before,
.clearfix:after {
  content: " ";
  display: table;
}
.clearfix:after {
  clear: both;
}
.center-block {
  display: block;
  margin-left: auto;
  margin-right: auto;
}
.pull-right {
  float: right !important;
}
.pull-left {
  float: left !important;
}
.hide {
  display: none !important;
}
.show {
  display: block !important;
}
.invisible {
  visibility: hidden;
}
.text-hide {
  font: 0/0 a;
  color: transparent;
  text-shadow: none;
  background-color: transparent;
  border: 0;
}
.hidden {
  display: none !important;
  visibility: hidden !important;
}
.affix {
  position: fixed;
}
/*
 * Remove text-shadow in selection highlight: h5bp.com/i
 * These selection rule sets have to be separate.
 * Customize the background color to match your design.
 */
::-moz-selection {
  background: #b3d4fc;
  text-shadow: none;
}
::selection {
  background: #b3d4fc;
  text-shadow: none;
}
/* ==========================================================================
   Browse Happy prompt
   ========================================================================== */
.browsehappy {
  margin: 0.2em 0;
  background: #999999;
  color: #000;
  padding: 0.2em 0;
}
/* ==========================================================================
   Styles
   ========================================================================== */
body {
  font-family: 'Open Sans', sans-serif;
}
.container {
  position: relative;
}
.hello {
  border-radius: 0;
  margin: 50px 0 50px 0;
  text-align: center;
  position: relative;
  display: none;
}
.hello .close {
  position: absolute;
  top: 50%;
  margin-top: -10px;
  right: 10px;
}
header {
  position: fixed;
  width: 100%;
  z-index: 1;
}
header .primary-content {
  background-color: #FFF;
  box-shadow: 0 2px 2px rgba(0, 0, 0, 0.2);
  z-index: 2;
  position: relative;
  padding: 20px 0;
}
header .primary-content h1 {
  margin: 0;
}
header .primary-content h1 a {
  font: 0/0 a;
  color: transparent;
  text-shadow: none;
  background-color: transparent;
  border: 0;
  width: 278px;
  height: 58px;
  display: block;
  background: url(../img/logo.png) no-repeat center center;
}
header .primary-content ul {
  margin: 4px 0 0 25px;
}
header .primary-content ul a {
  padding: 15px;
}
header .primary-content ul .active a {
  background-color: #f77200;
}
header .primary-content p {
  text-align: right;
  margin: 10px 0;
}
header .secondary-content {
  -webkit-transition: top 0.5s cubic-bezier(0.19, 1, 0.22, 1);
  transition: top 0.5s cubic-bezier(0.19, 1, 0.22, 1);
  top: 0;
  background-color: #f77200;
  z-index: 1;
  position: relative;
}
header .secondary-content.offscreen {
  top: -45px;
}
header .secondary-content form label {
  position: absolute;
  color: #FFF;
  top: 11px;
  font-size: 18px;
}
header .secondary-content form input {
  background: transparent;
  border: solid 0;
  color: #FFF;
  padding: 10px 10px 10px 35px;
  font-size: 18px;
  outline: solid 0;
  width: 100%;
}
header .secondary-content form input:-moz-placeholder {
  color: rgba(255, 255, 255, 0.5);
}
header .secondary-content form input::-moz-placeholder {
  color: rgba(255, 255, 255, 0.5);
  opacity: 1;
}
header .secondary-content form input:-ms-input-placeholder {
  color: rgba(255, 255, 255, 0.5);
}
header .secondary-content form input::-webkit-input-placeholder {
  color: rgba(255, 255, 255, 0.5);
}
header .alert-news {
  -webkit-transition: bottom 0.5s cubic-bezier(0.175, 0.885, 0.32, 1.275);
  transition: bottom 0.5s cubic-bezier(0.175, 0.885, 0.32, 1.275);
  position: absolute;
  bottom: 45px;
  width: 100%;
  text-align: center;
}
header .alert-news.has-news {
  bottom: -42px;
}
main {
  -webkit-transition: all 1.2s cubic-bezier(1, 0, 0, 1);
  transition: all 1.2s cubic-bezier(1, 0, 0, 1);
  background-color: #fef5ed;
  padding-top: 147px;
  position: relative;
}
main .notifications {
  margin-top: 50px;
  color: #9e937c;
  text-align: right;
  display: none;
}
main .writer {
  color: #F9A432;
}
main .writer .redes {
  margin: 20px 0 10px;
}
main .writer .redes a {
  display: inline-block;
  width: 48px;
  height: 48px;
  text-indent: -9999px;
}
main .writer .redes a.facebook {
  background: url(../img/facebook.png);
}
main .writer .redes a.twitter {
  background: url(../img/twitter.png);
}
main .writer .redes a.skype {
  background: url(../img/skype.png);
}
main .writer .name {
  text-align: center;
}
main .writer .name h1 {
  margin-top: 10px;
}
main .writer .name img {
  margin: 50px 0 0 0;
  border-radius: 50px;
}
main .writer p {
  padding-top: 10px;
  color: #777;
}
main section {
  background-color: #FFF;
  border-top: solid 2px #f77200;
  padding: 0 15px 50px;
}
main section article {
  border-top: 1px solid #ddd;
  padding-top: 15px;
  padding-bottom: 15px;
  position: relative;
}
main section article:hover {
  background: #FAFAFA;
}
main section article:hover .status span {
  display: block;
}
main section article:first-child {
  border-top: 0px solid;
}
main section article.alert-new .status {
  color: #f77200;
}
main section article.alert-new .status .icon {
  background-color: #f77200;
}
main section article.alert-read .status i {
  font-size: 9px;
}
main section article .status {
  z-index: 2;
  position: absolute;
  top: 10px;
  right: 10px;
  font-size: 11px;
  padding-right: 12px;
  color: #999999;
}
main section article .status i {
  position: absolute;
  top: 4px;
  right: 0;
}
main section article .status i.icon {
  padding: 4px;
  border-radius: 5px;
  background-color: #999999;
  overflow: hidden;
  width: 0;
  height: 0;
}
main section article .status span {
  display: none;
}
main section article .link-title {
  display: inline-block;
  margin-bottom: 10px;
  margin-right: 100px;
}
main section article .link-title:hover {
  text-decoration: none;
}
main section article .link-title:hover small i {
  display: inline-block;
  font-size: 11px;
}
main section article .link-title:focus {
  text-decoration: none;
}
main section article .link-title h1 {
  text-transform: uppercase;
  margin-top: 0;
  font-size: 18px;
  margin-bottom: 0;
  color: #333;
}
main section article .link-title small {
  color: #999999;
  font-size: 13px;
  margin-top: 0;
}
main section article .link-title small i {
  display: none;
  margin-left: 2px;
  font-size: 11px;
}
main section article footer {
  font-size: 11px;
  color: #999999;
}
main section article footer .post-info {
  width: 280px;
  text-align: right;
}
main section article footer .post-info p {
  float: right;
  text-align: right;
  margin: 5px 10px 0 0;
}
main section article footer .post-info img {
  width: 40px;
  float: right;
  border-radius: 50px;
}
#footer {
  color: #9e937c;
  background-color: #fef5ed;
}
#footer footer {
  padding-top: 15px;
  padding-bottom: 15px;
}
.loading-more {
  -webkit-transition: opacity 0.7s ease;
  transition: opacity 0.7s ease;
  position: absolute;
  left: 0;
  right: 0;
  bottom: 0;
  height: 50px;
  background: -webkit-radial-gradient(50% 100%, farthest-side, #fef5ed, rgba(255, 255, 255, 0)) 0 100%;
  background: radial-gradient(farthest-side at 50% 100%, #fef5ed, rgba(255, 255, 255, 0)) 0 100%;
  background-attachment: local;
  pointer-events: none;
  z-index: 1030;
  opacity: 0;
  text-align: center;
  line-height: 50px;
  color: #9e937c;
}
.loading-more i {
  background: url(http://php.dev/labs/caquijs/img/ajax-loader.gif) no-repeat 0 0;
  width: 16px;
  height: 11px;
  display: inline-block;
  position: relative;
  top: 1px;
}
@media (max-width: 991px) {
  main section article img {
    margin-bottom: 20px;
  }
}
.tagger-list {
  list-style: none;
  padding: 0;
  margin: 0;
  position: absolute;
}
.tagger-list .tagger-list-item {
  cursor: pointer;
}
#clearfix {
  *zoom: 1;
}
#clearfix:before,
#clearfix:after {
  content: " ";
  /* 1 */
  display: table;
  /* 2 */
}
#clearfix:after {
  clear: both;
}
.tagger {
  *zoom: 1;
  list-style: none;
  padding: 0;
  margin: 0;
  clear: both;
}
.tagger:before,
.tagger:after {
  content: " ";
  /* 1 */
  display: table;
  /* 2 */
}
.tagger:after {
  clear: both;
}
.tagger .tagger-tag {
  float: left;
}
.tagger .tagger-tag .tagger-tag-remove {
  cursor: pointer;
}
.tagger .tagger-tag-input {
  position: relative;
  float: left;
}
.tagger .tagger-tag-input input {
  position: relative;
  z-index: 1;
  border: solid 0;
  background: transparent;
  padding: 0;
  margin: 0;
  font-size: 16px;
}
.tagger .tagger-tag-input .tagger-tag-input-suggestion {
  position: absolute;
  z-index: 0;
  color: #CCC;
}
.tagger-default-theme.tagger-list {
  font-size: 18px;
  list-style: none;
  padding: 0;
  margin: 1px 0 0 0;
  position: absolute;
  border: 1px solid #CCC;
}
.tagger-default-theme.tagger-list .tagger-list-item {
  padding: 5px 10px;
  border-top: 1px solid #CDCDCD;
}
.tagger-default-theme.tagger-list .tagger-list-item:first-child {
  border-top: 0px solid;
}
.tagger-default-theme.tagger-list .tagger-list-item span {
  display: block;
}
.tagger-default-theme.tagger-list .tagger-list-item small {
  display: block;
  color: #999;
  font-size: 12px;
}
.tagger-default-theme.tagger {
  font-size: 18px;
  list-style: none;
  padding: 0;
  margin: 0;
  clear: both;
}
.tagger-default-theme.tagger .tagger-tag {
  float: left;
  background: #EFEFEF;
  border: 1px solid #CCC;
  position: relative;
  margin-right: 5px;
}
.tagger-default-theme.tagger .tagger-tag .tagger-item-label-text {
  padding: 10px 10px 10px 35px;
  display: inline-block;
}
.tagger-default-theme.tagger .tagger-tag .tagger-tag-remove {
  padding: 10px 10px 10px 35px;
  font-size: 18px;
  background: none;
  border: 0px solid;
  border-left: 1px solid #CCC;
  padding-left: 10px;
}
.tagger-default-theme.tagger .tagger-tag .tagger-tag-remove:hover {
  background: #DDD;
}
.tagger-default-theme.tagger .tagger-tag-input {
  position: relative;
  float: left;
}
.tagger-default-theme.tagger .tagger-tag-input input {
  font-size: 18px;
  padding: 10px 10px 10px 35px;
  position: relative;
  z-index: 1;
  border: solid 1px transparent;
  background: transparent;
  margin: 0;
  outline: 0px solid;
}
.tagger-default-theme.tagger .tagger-tag-input .tagger-tag-input-suggestion {
  position: absolute;
  z-index: 0;
  color: #CCC;
}

/*# sourceMappingURL=data:application/json;base64, */